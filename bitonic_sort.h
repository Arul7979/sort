
#ifndef SORT_CSWAP
#define SORT_CSWAP(x, y) { if(SORT_CMP((x),(y)) > 0) {SORT_SWAP((x),(y));}}
#endif

#define BITONIC_SORT_2          SORT_MAKE_STR(bitonic_sort_2)
static __inline void BITONIC_SORT_2(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
}


#define BITONIC_SORT_3          SORT_MAKE_STR(bitonic_sort_3)
static __inline void BITONIC_SORT_3(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[0], dst[1]);
}


#define BITONIC_SORT_4          SORT_MAKE_STR(bitonic_sort_4)
static __inline void BITONIC_SORT_4(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[1], dst[2]);
}


#define BITONIC_SORT_5          SORT_MAKE_STR(bitonic_sort_5)
static __inline void BITONIC_SORT_5(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[1], dst[2]);
}


#define BITONIC_SORT_6          SORT_MAKE_STR(bitonic_sort_6)
static __inline void BITONIC_SORT_6(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[2], dst[3]);
}


#define BITONIC_SORT_7          SORT_MAKE_STR(bitonic_sort_7)
static __inline void BITONIC_SORT_7(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[2], dst[3]);
}


#define BITONIC_SORT_8          SORT_MAKE_STR(bitonic_sort_8)
static __inline void BITONIC_SORT_8(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[3], dst[4]);
}


#define BITONIC_SORT_9          SORT_MAKE_STR(bitonic_sort_9)
static __inline void BITONIC_SORT_9(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[2], dst[3]);
}


#define BITONIC_SORT_10          SORT_MAKE_STR(bitonic_sort_10)
static __inline void BITONIC_SORT_10(SORT_TYPE *dst) {
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[4], dst[5]);
}


#define BITONIC_SORT_11          SORT_MAKE_STR(bitonic_sort_11)
static __inline void BITONIC_SORT_11(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[7], dst[8]);
}


#define BITONIC_SORT_12          SORT_MAKE_STR(bitonic_sort_12)
static __inline void BITONIC_SORT_12(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[7], dst[8]);
}


#define BITONIC_SORT_13          SORT_MAKE_STR(bitonic_sort_13)
static __inline void BITONIC_SORT_13(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[0], dst[12]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
}


#define BITONIC_SORT_14          SORT_MAKE_STR(bitonic_sort_14)
static __inline void BITONIC_SORT_14(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
}


#define BITONIC_SORT_15          SORT_MAKE_STR(bitonic_sort_15)
static __inline void BITONIC_SORT_15(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
}


#define BITONIC_SORT_16          SORT_MAKE_STR(bitonic_sort_16)
static __inline void BITONIC_SORT_16(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
}


#define BITONIC_SORT_17          SORT_MAKE_STR(bitonic_sort_17)
static __inline void BITONIC_SORT_17(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[7], dst[16]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[0], dst[9]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[1], dst[10]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[2], dst[11]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[1], dst[8]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[7], dst[8]);
}


#define BITONIC_SORT_18          SORT_MAKE_STR(bitonic_sort_18)
static __inline void BITONIC_SORT_18(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[8], dst[17]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[7], dst[16]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[0], dst[9]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[1], dst[10]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[2], dst[11]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[8], dst[9]);
}


#define BITONIC_SORT_19          SORT_MAKE_STR(bitonic_sort_19)
static __inline void BITONIC_SORT_19(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[8], dst[18]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[7], dst[17]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[0], dst[10]);
  SORT_CSWAP(dst[8], dst[17]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[0], dst[9]);
  SORT_CSWAP(dst[1], dst[11]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[1], dst[10]);
  SORT_CSWAP(dst[2], dst[12]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[7], dst[16]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[8], dst[9]);
}


#define BITONIC_SORT_20          SORT_MAKE_STR(bitonic_sort_20)
static __inline void BITONIC_SORT_20(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[9], dst[19]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[0], dst[10]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[8], dst[18]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[1], dst[11]);
  SORT_CSWAP(dst[9], dst[18]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[1], dst[10]);
  SORT_CSWAP(dst[2], dst[12]);
  SORT_CSWAP(dst[7], dst[17]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[8], dst[17]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[9], dst[10]);
}


#define BITONIC_SORT_21          SORT_MAKE_STR(bitonic_sort_21)
static __inline void BITONIC_SORT_21(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[9], dst[20]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[8], dst[19]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[9], dst[19]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[0], dst[11]);
  SORT_CSWAP(dst[7], dst[18]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[0], dst[10]);
  SORT_CSWAP(dst[1], dst[12]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[8], dst[18]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[1], dst[11]);
  SORT_CSWAP(dst[2], dst[13]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[9], dst[18]);
  SORT_CSWAP(dst[8], dst[17]);
  SORT_CSWAP(dst[1], dst[10]);
  SORT_CSWAP(dst[3], dst[14]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[7], dst[16]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[9], dst[10]);
}


#define BITONIC_SORT_22          SORT_MAKE_STR(bitonic_sort_22)
static __inline void BITONIC_SORT_22(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[10], dst[21]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[0], dst[6]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[15], dst[20]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[0], dst[11]);
  SORT_CSWAP(dst[9], dst[20]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[10], dst[20]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[1], dst[12]);
  SORT_CSWAP(dst[8], dst[19]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[1], dst[11]);
  SORT_CSWAP(dst[2], dst[13]);
  SORT_CSWAP(dst[7], dst[18]);
  SORT_CSWAP(dst[9], dst[19]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[3], dst[14]);
  SORT_CSWAP(dst[2], dst[11]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[10], dst[19]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[7], dst[17]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[7], dst[16]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[11]);
}


#define BITONIC_SORT_23          SORT_MAKE_STR(bitonic_sort_23)
static __inline void BITONIC_SORT_23(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[19], dst[22]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[16], dst[22]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[10], dst[22]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[0], dst[6]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[0], dst[5]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[16], dst[21]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[15], dst[20]);
  SORT_CSWAP(dst[0], dst[12]);
  SORT_CSWAP(dst[9], dst[21]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[0], dst[11]);
  SORT_CSWAP(dst[10], dst[21]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[1], dst[13]);
  SORT_CSWAP(dst[8], dst[20]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[1], dst[12]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[7], dst[19]);
  SORT_CSWAP(dst[9], dst[20]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[1], dst[11]);
  SORT_CSWAP(dst[3], dst[15]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[10], dst[20]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[3], dst[14]);
  SORT_CSWAP(dst[2], dst[11]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[7], dst[18]);
  SORT_CSWAP(dst[10], dst[19]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[9], dst[18]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[7], dst[17]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[8], dst[17]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[11]);
}


#define BITONIC_SORT_24          SORT_MAKE_STR(bitonic_sort_24)
static __inline void BITONIC_SORT_24(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[20], dst[23]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[19], dst[22]);
  SORT_CSWAP(dst[17], dst[23]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[0], dst[6]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[11], dst[23]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[16], dst[22]);
  SORT_CSWAP(dst[0], dst[12]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[17], dst[22]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[16], dst[21]);
  SORT_CSWAP(dst[1], dst[13]);
  SORT_CSWAP(dst[10], dst[22]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[1], dst[12]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[9], dst[21]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[2], dst[13]);
  SORT_CSWAP(dst[3], dst[15]);
  SORT_CSWAP(dst[8], dst[20]);
  SORT_CSWAP(dst[10], dst[21]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[2], dst[12]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[7], dst[19]);
  SORT_CSWAP(dst[11], dst[21]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[8], dst[19]);
  SORT_CSWAP(dst[11], dst[20]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[7], dst[18]);
  SORT_CSWAP(dst[10], dst[19]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[8], dst[18]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[9], dst[18]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[12]);
}


#define BITONIC_SORT_25          SORT_MAKE_STR(bitonic_sort_25)
static __inline void BITONIC_SORT_25(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[17], dst[24]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[0], dst[6]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[20], dst[23]);
  SORT_CSWAP(dst[11], dst[24]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[16], dst[23]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[12], dst[19]);
  SORT_CSWAP(dst[15], dst[22]);
  SORT_CSWAP(dst[17], dst[23]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[4], dst[9]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[13], dst[20]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[16], dst[22]);
  SORT_CSWAP(dst[10], dst[23]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[17], dst[22]);
  SORT_CSWAP(dst[11], dst[23]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[0], dst[13]);
  SORT_CSWAP(dst[9], dst[22]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[0], dst[12]);
  SORT_CSWAP(dst[8], dst[21]);
  SORT_CSWAP(dst[10], dst[22]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[1], dst[14]);
  SORT_CSWAP(dst[7], dst[20]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[1], dst[12]);
  SORT_CSWAP(dst[6], dst[19]);
  SORT_CSWAP(dst[8], dst[20]);
  SORT_CSWAP(dst[11], dst[21]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[3], dst[16]);
  SORT_CSWAP(dst[7], dst[19]);
  SORT_CSWAP(dst[10], dst[20]);
  SORT_CSWAP(dst[2], dst[13]);
  SORT_CSWAP(dst[4], dst[17]);
  SORT_CSWAP(dst[5], dst[18]);
  SORT_CSWAP(dst[8], dst[19]);
  SORT_CSWAP(dst[11], dst[20]);
  SORT_CSWAP(dst[2], dst[12]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[9], dst[19]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[3], dst[12]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[10], dst[19]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[12]);
}


#define BITONIC_SORT_26          SORT_MAKE_STR(bitonic_sort_26)
static __inline void BITONIC_SORT_26(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[18], dst[25]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[19], dst[22]);
  SORT_CSWAP(dst[21], dst[24]);
  SORT_CSWAP(dst[12], dst[25]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[17], dst[24]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[0], dst[7]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[13], dst[20]);
  SORT_CSWAP(dst[16], dst[23]);
  SORT_CSWAP(dst[18], dst[24]);
  SORT_CSWAP(dst[0], dst[6]);
  SORT_CSWAP(dst[1], dst[8]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[15], dst[22]);
  SORT_CSWAP(dst[17], dst[23]);
  SORT_CSWAP(dst[11], dst[24]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[18], dst[23]);
  SORT_CSWAP(dst[0], dst[13]);
  SORT_CSWAP(dst[12], dst[24]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[15], dst[20]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[1], dst[14]);
  SORT_CSWAP(dst[10], dst[23]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[1], dst[13]);
  SORT_CSWAP(dst[9], dst[22]);
  SORT_CSWAP(dst[12], dst[23]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[8], dst[21]);
  SORT_CSWAP(dst[10], dst[22]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[3], dst[16]);
  SORT_CSWAP(dst[7], dst[20]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[2], dst[13]);
  SORT_CSWAP(dst[4], dst[17]);
  SORT_CSWAP(dst[8], dst[20]);
  SORT_CSWAP(dst[12], dst[22]);
  SORT_CSWAP(dst[11], dst[21]);
  SORT_CSWAP(dst[5], dst[18]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[6], dst[19]);
  SORT_CSWAP(dst[10], dst[20]);
  SORT_CSWAP(dst[12], dst[21]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[7], dst[19]);
  SORT_CSWAP(dst[12], dst[20]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[8], dst[19]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[9], dst[19]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[10], dst[19]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[12], dst[19]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[12], dst[13]);
}


#define BITONIC_SORT_27          SORT_MAKE_STR(bitonic_sort_27)
static __inline void BITONIC_SORT_27(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[25], dst[26]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[24], dst[26]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[22], dst[26]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[19], dst[26]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[20], dst[23]);
  SORT_CSWAP(dst[22], dst[25]);
  SORT_CSWAP(dst[12], dst[26]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[13], dst[20]);
  SORT_CSWAP(dst[18], dst[25]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[0], dst[7]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[17], dst[24]);
  SORT_CSWAP(dst[19], dst[25]);
  SORT_CSWAP(dst[0], dst[6]);
  SORT_CSWAP(dst[1], dst[8]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[15], dst[22]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[16], dst[23]);
  SORT_CSWAP(dst[19], dst[24]);
  SORT_CSWAP(dst[11], dst[25]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[1], dst[6]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[17], dst[23]);
  SORT_CSWAP(dst[0], dst[14]);
  SORT_CSWAP(dst[12], dst[25]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[15], dst[20]);
  SORT_CSWAP(dst[18], dst[23]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[0], dst[13]);
  SORT_CSWAP(dst[10], dst[24]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[1], dst[15]);
  SORT_CSWAP(dst[12], dst[24]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[19], dst[22]);
  SORT_CSWAP(dst[2], dst[16]);
  SORT_CSWAP(dst[1], dst[13]);
  SORT_CSWAP(dst[9], dst[23]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[3], dst[17]);
  SORT_CSWAP(dst[8], dst[22]);
  SORT_CSWAP(dst[10], dst[23]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[4], dst[18]);
  SORT_CSWAP(dst[7], dst[21]);
  SORT_CSWAP(dst[11], dst[23]);
  SORT_CSWAP(dst[2], dst[13]);
  SORT_CSWAP(dst[5], dst[19]);
  SORT_CSWAP(dst[4], dst[17]);
  SORT_CSWAP(dst[3], dst[14]);
  SORT_CSWAP(dst[6], dst[20]);
  SORT_CSWAP(dst[8], dst[21]);
  SORT_CSWAP(dst[12], dst[23]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[5], dst[18]);
  SORT_CSWAP(dst[3], dst[13]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[7], dst[20]);
  SORT_CSWAP(dst[10], dst[21]);
  SORT_CSWAP(dst[12], dst[22]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[4], dst[13]);
  SORT_CSWAP(dst[8], dst[20]);
  SORT_CSWAP(dst[12], dst[21]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[9], dst[20]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[10], dst[20]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[11], dst[20]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[12], dst[20]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[12], dst[19]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[8], dst[13]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[12], dst[13]);
}


#define BITONIC_SORT_28          SORT_MAKE_STR(bitonic_sort_28)
static __inline void BITONIC_SORT_28(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[26], dst[27]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[24], dst[26]);
  SORT_CSWAP(dst[25], dst[27]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[25], dst[26]);
  SORT_CSWAP(dst[23], dst[27]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[22], dst[26]);
  SORT_CSWAP(dst[20], dst[27]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[21], dst[24]);
  SORT_CSWAP(dst[23], dst[26]);
  SORT_CSWAP(dst[13], dst[27]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[0], dst[7]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[19], dst[26]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[1], dst[8]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[15], dst[22]);
  SORT_CSWAP(dst[18], dst[25]);
  SORT_CSWAP(dst[20], dst[26]);
  SORT_CSWAP(dst[0], dst[14]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[16], dst[23]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[17], dst[24]);
  SORT_CSWAP(dst[20], dst[25]);
  SORT_CSWAP(dst[12], dst[26]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[16], dst[22]);
  SORT_CSWAP(dst[18], dst[24]);
  SORT_CSWAP(dst[1], dst[15]);
  SORT_CSWAP(dst[11], dst[25]);
  SORT_CSWAP(dst[13], dst[26]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[16], dst[21]);
  SORT_CSWAP(dst[19], dst[24]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[1], dst[14]);
  SORT_CSWAP(dst[13], dst[25]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[2], dst[16]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[20], dst[23]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[3], dst[17]);
  SORT_CSWAP(dst[10], dst[24]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[4], dst[18]);
  SORT_CSWAP(dst[9], dst[23]);
  SORT_CSWAP(dst[11], dst[24]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[4], dst[17]);
  SORT_CSWAP(dst[5], dst[19]);
  SORT_CSWAP(dst[3], dst[14]);
  SORT_CSWAP(dst[8], dst[22]);
  SORT_CSWAP(dst[12], dst[24]);
  SORT_CSWAP(dst[6], dst[20]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[7], dst[21]);
  SORT_CSWAP(dst[9], dst[22]);
  SORT_CSWAP(dst[13], dst[24]);
  SORT_CSWAP(dst[12], dst[23]);
  SORT_CSWAP(dst[6], dst[19]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[8], dst[21]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[13], dst[23]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[9], dst[21]);
  SORT_CSWAP(dst[13], dst[22]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[10], dst[21]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[11], dst[21]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[12], dst[21]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[13], dst[21]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[12], dst[19]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[13], dst[20]);
  SORT_CSWAP(dst[12], dst[17]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[13], dst[14]);
}


#define BITONIC_SORT_29          SORT_MAKE_STR(bitonic_sort_29)
static __inline void BITONIC_SORT_29(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[25], dst[26]);
  SORT_CSWAP(dst[27], dst[28]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[25], dst[27]);
  SORT_CSWAP(dst[26], dst[28]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[26], dst[27]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[24], dst[28]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[22], dst[26]);
  SORT_CSWAP(dst[23], dst[27]);
  SORT_CSWAP(dst[20], dst[28]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[22], dst[25]);
  SORT_CSWAP(dst[24], dst[27]);
  SORT_CSWAP(dst[13], dst[28]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[0], dst[7]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[24], dst[26]);
  SORT_CSWAP(dst[14], dst[22]);
  SORT_CSWAP(dst[19], dst[27]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[1], dst[8]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[15], dst[23]);
  SORT_CSWAP(dst[18], dst[26]);
  SORT_CSWAP(dst[20], dst[27]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[16], dst[24]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[17], dst[25]);
  SORT_CSWAP(dst[20], dst[26]);
  SORT_CSWAP(dst[12], dst[27]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[4], dst[10]);
  SORT_CSWAP(dst[16], dst[23]);
  SORT_CSWAP(dst[18], dst[25]);
  SORT_CSWAP(dst[0], dst[15]);
  SORT_CSWAP(dst[11], dst[26]);
  SORT_CSWAP(dst[13], dst[27]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[5], dst[10]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[16], dst[22]);
  SORT_CSWAP(dst[19], dst[25]);
  SORT_CSWAP(dst[0], dst[14]);
  SORT_CSWAP(dst[13], dst[26]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[16], dst[21]);
  SORT_CSWAP(dst[20], dst[25]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[1], dst[16]);
  SORT_CSWAP(dst[10], dst[25]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[20], dst[23]);
  SORT_CSWAP(dst[2], dst[17]);
  SORT_CSWAP(dst[1], dst[14]);
  SORT_CSWAP(dst[9], dst[24]);
  SORT_CSWAP(dst[11], dst[25]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[2], dst[16]);
  SORT_CSWAP(dst[3], dst[18]);
  SORT_CSWAP(dst[8], dst[23]);
  SORT_CSWAP(dst[12], dst[25]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[4], dst[19]);
  SORT_CSWAP(dst[7], dst[22]);
  SORT_CSWAP(dst[9], dst[23]);
  SORT_CSWAP(dst[13], dst[25]);
  SORT_CSWAP(dst[12], dst[24]);
  SORT_CSWAP(dst[2], dst[14]);
  SORT_CSWAP(dst[4], dst[18]);
  SORT_CSWAP(dst[5], dst[20]);
  SORT_CSWAP(dst[6], dst[21]);
  SORT_CSWAP(dst[8], dst[22]);
  SORT_CSWAP(dst[11], dst[23]);
  SORT_CSWAP(dst[13], dst[24]);
  SORT_CSWAP(dst[6], dst[20]);
  SORT_CSWAP(dst[5], dst[18]);
  SORT_CSWAP(dst[3], dst[14]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[9], dst[22]);
  SORT_CSWAP(dst[13], dst[23]);
  SORT_CSWAP(dst[6], dst[19]);
  SORT_CSWAP(dst[4], dst[14]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[10], dst[22]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[5], dst[14]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[12], dst[22]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[13], dst[22]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[12], dst[20]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[13], dst[21]);
  SORT_CSWAP(dst[12], dst[18]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[13], dst[20]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[8], dst[14]);
  SORT_CSWAP(dst[13], dst[18]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[9], dst[14]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[13], dst[14]);
}


#define BITONIC_SORT_30          SORT_MAKE_STR(bitonic_sort_30)
static __inline void BITONIC_SORT_30(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[26], dst[27]);
  SORT_CSWAP(dst[28], dst[29]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[26], dst[28]);
  SORT_CSWAP(dst[27], dst[29]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[27], dst[28]);
  SORT_CSWAP(dst[22], dst[26]);
  SORT_CSWAP(dst[25], dst[29]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[23], dst[27]);
  SORT_CSWAP(dst[24], dst[28]);
  SORT_CSWAP(dst[21], dst[29]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[23], dst[26]);
  SORT_CSWAP(dst[25], dst[28]);
  SORT_CSWAP(dst[14], dst[29]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[24], dst[26]);
  SORT_CSWAP(dst[25], dst[27]);
  SORT_CSWAP(dst[15], dst[23]);
  SORT_CSWAP(dst[20], dst[28]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[0], dst[7]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[25], dst[26]);
  SORT_CSWAP(dst[15], dst[22]);
  SORT_CSWAP(dst[16], dst[24]);
  SORT_CSWAP(dst[19], dst[27]);
  SORT_CSWAP(dst[21], dst[28]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[17], dst[25]);
  SORT_CSWAP(dst[16], dst[22]);
  SORT_CSWAP(dst[18], dst[26]);
  SORT_CSWAP(dst[21], dst[27]);
  SORT_CSWAP(dst[0], dst[15]);
  SORT_CSWAP(dst[13], dst[28]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[17], dst[24]);
  SORT_CSWAP(dst[19], dst[26]);
  SORT_CSWAP(dst[1], dst[16]);
  SORT_CSWAP(dst[12], dst[27]);
  SORT_CSWAP(dst[14], dst[28]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[17], dst[23]);
  SORT_CSWAP(dst[20], dst[26]);
  SORT_CSWAP(dst[1], dst[15]);
  SORT_CSWAP(dst[14], dst[27]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[17], dst[22]);
  SORT_CSWAP(dst[21], dst[26]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[2], dst[17]);
  SORT_CSWAP(dst[11], dst[26]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[19], dst[22]);
  SORT_CSWAP(dst[21], dst[24]);
  SORT_CSWAP(dst[2], dst[16]);
  SORT_CSWAP(dst[3], dst[18]);
  SORT_CSWAP(dst[10], dst[25]);
  SORT_CSWAP(dst[12], dst[26]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[4], dst[19]);
  SORT_CSWAP(dst[9], dst[24]);
  SORT_CSWAP(dst[13], dst[26]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[4], dst[18]);
  SORT_CSWAP(dst[5], dst[20]);
  SORT_CSWAP(dst[3], dst[15]);
  SORT_CSWAP(dst[8], dst[23]);
  SORT_CSWAP(dst[10], dst[24]);
  SORT_CSWAP(dst[14], dst[26]);
  SORT_CSWAP(dst[6], dst[21]);
  SORT_CSWAP(dst[5], dst[18]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[7], dst[22]);
  SORT_CSWAP(dst[10], dst[23]);
  SORT_CSWAP(dst[13], dst[24]);
  SORT_CSWAP(dst[14], dst[25]);
  SORT_CSWAP(dst[6], dst[20]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[8], dst[22]);
  SORT_CSWAP(dst[12], dst[23]);
  SORT_CSWAP(dst[14], dst[24]);
  SORT_CSWAP(dst[6], dst[19]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[9], dst[22]);
  SORT_CSWAP(dst[14], dst[23]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[10], dst[22]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[11], dst[22]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[12], dst[22]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[13], dst[22]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[12], dst[20]);
  SORT_CSWAP(dst[14], dst[22]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[12], dst[19]);
  SORT_CSWAP(dst[13], dst[21]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[14], dst[15]);
}


#define BITONIC_SORT_31          SORT_MAKE_STR(bitonic_sort_31)
static __inline void BITONIC_SORT_31(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[15], dst[16]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[25], dst[26]);
  SORT_CSWAP(dst[27], dst[28]);
  SORT_CSWAP(dst[29], dst[30]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[24], dst[26]);
  SORT_CSWAP(dst[27], dst[29]);
  SORT_CSWAP(dst[28], dst[30]);
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[28], dst[29]);
  SORT_CSWAP(dst[23], dst[27]);
  SORT_CSWAP(dst[26], dst[30]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[24], dst[28]);
  SORT_CSWAP(dst[25], dst[29]);
  SORT_CSWAP(dst[15], dst[23]);
  SORT_CSWAP(dst[22], dst[30]);
  SORT_CSWAP(dst[0], dst[3]);
  SORT_CSWAP(dst[2], dst[5]);
  SORT_CSWAP(dst[8], dst[11]);
  SORT_CSWAP(dst[10], dst[13]);
  SORT_CSWAP(dst[16], dst[19]);
  SORT_CSWAP(dst[18], dst[21]);
  SORT_CSWAP(dst[24], dst[27]);
  SORT_CSWAP(dst[26], dst[29]);
  SORT_CSWAP(dst[14], dst[30]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[25], dst[27]);
  SORT_CSWAP(dst[26], dst[28]);
  SORT_CSWAP(dst[16], dst[24]);
  SORT_CSWAP(dst[21], dst[29]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[0], dst[7]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[6], dst[13]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[26], dst[27]);
  SORT_CSWAP(dst[16], dst[23]);
  SORT_CSWAP(dst[17], dst[25]);
  SORT_CSWAP(dst[20], dst[28]);
  SORT_CSWAP(dst[22], dst[29]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[1], dst[7]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[18], dst[26]);
  SORT_CSWAP(dst[17], dst[23]);
  SORT_CSWAP(dst[19], dst[27]);
  SORT_CSWAP(dst[22], dst[28]);
  SORT_CSWAP(dst[0], dst[16]);
  SORT_CSWAP(dst[13], dst[29]);
  SORT_CSWAP(dst[2], dst[9]);
  SORT_CSWAP(dst[4], dst[11]);
  SORT_CSWAP(dst[18], dst[25]);
  SORT_CSWAP(dst[20], dst[27]);
  SORT_CSWAP(dst[0], dst[15]);
  SORT_CSWAP(dst[1], dst[17]);
  SORT_CSWAP(dst[12], dst[28]);
  SORT_CSWAP(dst[14], dst[29]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[5], dst[11]);
  SORT_CSWAP(dst[18], dst[24]);
  SORT_CSWAP(dst[21], dst[27]);
  SORT_CSWAP(dst[1], dst[15]);
  SORT_CSWAP(dst[14], dst[28]);
  SORT_CSWAP(dst[2], dst[7]);
  SORT_CSWAP(dst[6], dst[11]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[18], dst[23]);
  SORT_CSWAP(dst[22], dst[27]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[22], dst[26]);
  SORT_CSWAP(dst[2], dst[18]);
  SORT_CSWAP(dst[11], dst[27]);
  SORT_CSWAP(dst[4], dst[7]);
  SORT_CSWAP(dst[6], dst[9]);
  SORT_CSWAP(dst[20], dst[23]);
  SORT_CSWAP(dst[22], dst[25]);
  SORT_CSWAP(dst[2], dst[17]);
  SORT_CSWAP(dst[3], dst[19]);
  SORT_CSWAP(dst[10], dst[26]);
  SORT_CSWAP(dst[12], dst[27]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[2], dst[16]);
  SORT_CSWAP(dst[4], dst[20]);
  SORT_CSWAP(dst[9], dst[25]);
  SORT_CSWAP(dst[13], dst[27]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[2], dst[15]);
  SORT_CSWAP(dst[4], dst[19]);
  SORT_CSWAP(dst[5], dst[21]);
  SORT_CSWAP(dst[8], dst[24]);
  SORT_CSWAP(dst[10], dst[25]);
  SORT_CSWAP(dst[14], dst[27]);
  SORT_CSWAP(dst[6], dst[22]);
  SORT_CSWAP(dst[5], dst[19]);
  SORT_CSWAP(dst[3], dst[15]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[7], dst[23]);
  SORT_CSWAP(dst[10], dst[24]);
  SORT_CSWAP(dst[13], dst[25]);
  SORT_CSWAP(dst[14], dst[26]);
  SORT_CSWAP(dst[6], dst[21]);
  SORT_CSWAP(dst[4], dst[15]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[8], dst[23]);
  SORT_CSWAP(dst[12], dst[24]);
  SORT_CSWAP(dst[14], dst[25]);
  SORT_CSWAP(dst[6], dst[20]);
  SORT_CSWAP(dst[5], dst[15]);
  SORT_CSWAP(dst[9], dst[23]);
  SORT_CSWAP(dst[14], dst[24]);
  SORT_CSWAP(dst[6], dst[19]);
  SORT_CSWAP(dst[10], dst[23]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[11], dst[23]);
  SORT_CSWAP(dst[6], dst[17]);
  SORT_CSWAP(dst[12], dst[23]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[13], dst[23]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[12], dst[20]);
  SORT_CSWAP(dst[6], dst[15]);
  SORT_CSWAP(dst[14], dst[23]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[10], dst[17]);
  SORT_CSWAP(dst[12], dst[19]);
  SORT_CSWAP(dst[13], dst[21]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[14], dst[22]);
  SORT_CSWAP(dst[13], dst[19]);
  SORT_CSWAP(dst[8], dst[15]);
  SORT_CSWAP(dst[14], dst[21]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[9], dst[15]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[10], dst[15]);
  SORT_CSWAP(dst[14], dst[19]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[12], dst[15]);
  SORT_CSWAP(dst[14], dst[17]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[14], dst[15]);
}


#define BITONIC_SORT_32          SORT_MAKE_STR(bitonic_sort_32)
static __inline void BITONIC_SORT_32(SORT_TYPE *dst) {
  SORT_CSWAP(dst[0], dst[1]);
  SORT_CSWAP(dst[2], dst[3]);
  SORT_CSWAP(dst[4], dst[5]);
  SORT_CSWAP(dst[6], dst[7]);
  SORT_CSWAP(dst[8], dst[9]);
  SORT_CSWAP(dst[10], dst[11]);
  SORT_CSWAP(dst[12], dst[13]);
  SORT_CSWAP(dst[14], dst[15]);
  SORT_CSWAP(dst[16], dst[17]);
  SORT_CSWAP(dst[18], dst[19]);
  SORT_CSWAP(dst[20], dst[21]);
  SORT_CSWAP(dst[22], dst[23]);
  SORT_CSWAP(dst[24], dst[25]);
  SORT_CSWAP(dst[26], dst[27]);
  SORT_CSWAP(dst[28], dst[29]);
  SORT_CSWAP(dst[30], dst[31]);
  SORT_CSWAP(dst[0], dst[2]);
  SORT_CSWAP(dst[1], dst[3]);
  SORT_CSWAP(dst[4], dst[6]);
  SORT_CSWAP(dst[5], dst[7]);
  SORT_CSWAP(dst[8], dst[10]);
  SORT_CSWAP(dst[9], dst[11]);
  SORT_CSWAP(dst[12], dst[14]);
  SORT_CSWAP(dst[13], dst[15]);
  SORT_CSWAP(dst[16], dst[18]);
  SORT_CSWAP(dst[17], dst[19]);
  SORT_CSWAP(dst[20], dst[22]);
  SORT_CSWAP(dst[21], dst[23]);
  SORT_CSWAP(dst[24], dst[26]);
  SORT_CSWAP(dst[25], dst[27]);
  SORT_CSWAP(dst[28], dst[30]);
  SORT_CSWAP(dst[29], dst[31]);
  SORT_CSWAP(dst[1], dst[2]);
  SORT_CSWAP(dst[5], dst[6]);
  SORT_CSWAP(dst[0], dst[4]);
  SORT_CSWAP(dst[3], dst[7]);
  SORT_CSWAP(dst[9], dst[10]);
  SORT_CSWAP(dst[13], dst[14]);
  SORT_CSWAP(dst[8], dst[12]);
  SORT_CSWAP(dst[11], dst[15]);
  SORT_CSWAP(dst[17], dst[18]);
  SORT_CSWAP(dst[21], dst[22]);
  SORT_CSWAP(dst[16], dst[20]);
  SORT_CSWAP(dst[19], dst[23]);
  SORT_CSWAP(dst[25], dst[26]);
  SORT_CSWAP(dst[29], dst[30]);
  SORT_CSWAP(dst[24], dst[28]);
  SORT_CSWAP(dst[27], dst[31]);
  SORT_CSWAP(dst[1], dst[5]);
  SORT_CSWAP(dst[2], dst[6]);
  SORT_CSWAP(dst[9], dst[13]);
  SORT_CSWAP(dst[10], dst[14]);
  SORT_CSWAP(dst[0], dst[8]);
  SORT_CSWAP(dst[7], dst[15]);
  SORT_CSWAP(dst[17], dst[21]);
  SORT_CSWAP(dst[18], dst[22]);
  SORT_CSWAP(dst[25], dst[29]);
  SORT_CSWAP(dst[26], dst[30]);
  SORT_CSWAP(dst[16], dst[24]);
  SORT_CSWAP(dst[23], dst[31]);
  SORT_CSWAP(dst[1], dst[4]);
  SORT_CSWAP(dst[3], dst[6]);
  SORT_CSWAP(dst[9], dst[12]);
  SORT_CSWAP(dst[11], dst[14]);
  SORT_CSWAP(dst[17], dst[20]);
  SORT_CSWAP(dst[19], dst[22]);
  SORT_CSWAP(dst[25], dst[28]);
  SORT_CSWAP(dst[27], dst[30]);
  SORT_CSWAP(dst[0], dst[16]);
  SORT_CSWAP(dst[15], dst[31]);
  SORT_CSWAP(dst[2], dst[4]);
  SORT_CSWAP(dst[3], dst[5]);
  SORT_CSWAP(dst[10], dst[12]);
  SORT_CSWAP(dst[11], dst[13]);
  SORT_CSWAP(dst[1], dst[9]);
  SORT_CSWAP(dst[6], dst[14]);
  SORT_CSWAP(dst[18], dst[20]);
  SORT_CSWAP(dst[19], dst[21]);
  SORT_CSWAP(dst[26], dst[28]);
  SORT_CSWAP(dst[27], dst[29]);
  SORT_CSWAP(dst[17], dst[25]);
  SORT_CSWAP(dst[22], dst[30]);
  SORT_CSWAP(dst[3], dst[4]);
  SORT_CSWAP(dst[11], dst[12]);
  SORT_CSWAP(dst[1], dst[8]);
  SORT_CSWAP(dst[2], dst[10]);
  SORT_CSWAP(dst[5], dst[13]);
  SORT_CSWAP(dst[7], dst[14]);
  SORT_CSWAP(dst[19], dst[20]);
  SORT_CSWAP(dst[27], dst[28]);
  SORT_CSWAP(dst[17], dst[24]);
  SORT_CSWAP(dst[18], dst[26]);
  SORT_CSWAP(dst[21], dst[29]);
  SORT_CSWAP(dst[23], dst[30]);
  SORT_CSWAP(dst[3], dst[11]);
  SORT_CSWAP(dst[2], dst[8]);
  SORT_CSWAP(dst[4], dst[12]);
  SORT_CSWAP(dst[7], dst[13]);
  SORT_CSWAP(dst[19], dst[27]);
  SORT_CSWAP(dst[18], dst[24]);
  SORT_CSWAP(dst[20], dst[28]);
  SORT_CSWAP(dst[23], dst[29]);
  SORT_CSWAP(dst[1], dst[17]);
  SORT_CSWAP(dst[14], dst[30]);
  SORT_CSWAP(dst[3], dst[10]);
  SORT_CSWAP(dst[5], dst[12]);
  SORT_CSWAP(dst[19], dst[26]);
  SORT_CSWAP(dst[21], dst[28]);
  SORT_CSWAP(dst[1], dst[16]);
  SORT_CSWAP(dst[2], dst[18]);
  SORT_CSWAP(dst[13], dst[29]);
  SORT_CSWAP(dst[15], dst[30]);
  SORT_CSWAP(dst[3], dst[9]);
  SORT_CSWAP(dst[6], dst[12]);
  SORT_CSWAP(dst[19], dst[25]);
  SORT_CSWAP(dst[22], dst[28]);
  SORT_CSWAP(dst[2], dst[16]);
  SORT_CSWAP(dst[15], dst[29]);
  SORT_CSWAP(dst[3], dst[8]);
  SORT_CSWAP(dst[7], dst[12]);
  SORT_CSWAP(dst[5], dst[9]);
  SORT_CSWAP(dst[6], dst[10]);
  SORT_CSWAP(dst[19], dst[24]);
  SORT_CSWAP(dst[23], dst[28]);
  SORT_CSWAP(dst[21], dst[25]);
  SORT_CSWAP(dst[22], dst[26]);
  SORT_CSWAP(dst[4], dst[8]);
  SORT_CSWAP(dst[7], dst[11]);
  SORT_CSWAP(dst[20], dst[24]);
  SORT_CSWAP(dst[23], dst[27]);
  SORT_CSWAP(dst[3], dst[19]);
  SORT_CSWAP(dst[12], dst[28]);
  SORT_CSWAP(dst[5], dst[8]);
  SORT_CSWAP(dst[7], dst[10]);
  SORT_CSWAP(dst[21], dst[24]);
  SORT_CSWAP(dst[23], dst[26]);
  SORT_CSWAP(dst[3], dst[18]);
  SORT_CSWAP(dst[4], dst[20]);
  SORT_CSWAP(dst[11], dst[27]);
  SORT_CSWAP(dst[13], dst[28]);
  SORT_CSWAP(dst[6], dst[8]);
  SORT_CSWAP(dst[7], dst[9]);
  SORT_CSWAP(dst[22], dst[24]);
  SORT_CSWAP(dst[23], dst[25]);
  SORT_CSWAP(dst[3], dst[17]);
  SORT_CSWAP(dst[5], dst[21]);
  SORT_CSWAP(dst[10], dst[26]);
  SORT_CSWAP(dst[14], dst[28]);
  SORT_CSWAP(dst[7], dst[8]);
  SORT_CSWAP(dst[23], dst[24]);
  SORT_CSWAP(dst[3], dst[16]);
  SORT_CSWAP(dst[5], dst[20]);
  SORT_CSWAP(dst[6], dst[22]);
  SORT_CSWAP(dst[9], dst[25]);
  SORT_CSWAP(dst[11], dst[26]);
  SORT_CSWAP(dst[15], dst[28]);
  SORT_CSWAP(dst[7], dst[23]);
  SORT_CSWAP(dst[6], dst[20]);
  SORT_CSWAP(dst[4], dst[16]);
  SORT_CSWAP(dst[5], dst[17]);
  SORT_CSWAP(dst[8], dst[24]);
  SORT_CSWAP(dst[11], dst[25]);
  SORT_CSWAP(dst[14], dst[26]);
  SORT_CSWAP(dst[15], dst[27]);
  SORT_CSWAP(dst[7], dst[22]);
  SORT_CSWAP(dst[5], dst[16]);
  SORT_CSWAP(dst[6], dst[18]);
  SORT_CSWAP(dst[9], dst[24]);
  SORT_CSWAP(dst[13], dst[25]);
  SORT_CSWAP(dst[15], dst[26]);
  SORT_CSWAP(dst[7], dst[21]);
  SORT_CSWAP(dst[6], dst[16]);
  SORT_CSWAP(dst[10], dst[24]);
  SORT_CSWAP(dst[15], dst[25]);
  SORT_CSWAP(dst[7], dst[20]);
  SORT_CSWAP(dst[11], dst[24]);
  SORT_CSWAP(dst[7], dst[19]);
  SORT_CSWAP(dst[12], dst[24]);
  SORT_CSWAP(dst[7], dst[18]);
  SORT_CSWAP(dst[13], dst[24]);
  SORT_CSWAP(dst[11], dst[19]);
  SORT_CSWAP(dst[12], dst[20]);
  SORT_CSWAP(dst[7], dst[17]);
  SORT_CSWAP(dst[14], dst[24]);
  SORT_CSWAP(dst[10], dst[18]);
  SORT_CSWAP(dst[13], dst[21]);
  SORT_CSWAP(dst[7], dst[16]);
  SORT_CSWAP(dst[15], dst[24]);
  SORT_CSWAP(dst[9], dst[17]);
  SORT_CSWAP(dst[11], dst[18]);
  SORT_CSWAP(dst[13], dst[20]);
  SORT_CSWAP(dst[14], dst[22]);
  SORT_CSWAP(dst[8], dst[16]);
  SORT_CSWAP(dst[11], dst[17]);
  SORT_CSWAP(dst[15], dst[23]);
  SORT_CSWAP(dst[14], dst[20]);
  SORT_CSWAP(dst[9], dst[16]);
  SORT_CSWAP(dst[15], dst[22]);
  SORT_CSWAP(dst[13], dst[17]);
  SORT_CSWAP(dst[14], dst[18]);
  SORT_CSWAP(dst[10], dst[16]);
  SORT_CSWAP(dst[15], dst[21]);
  SORT_CSWAP(dst[11], dst[16]);
  SORT_CSWAP(dst[15], dst[20]);
  SORT_CSWAP(dst[12], dst[16]);
  SORT_CSWAP(dst[15], dst[19]);
  SORT_CSWAP(dst[13], dst[16]);
  SORT_CSWAP(dst[15], dst[18]);
  SORT_CSWAP(dst[14], dst[16]);
  SORT_CSWAP(dst[15], dst[17]);
  SORT_CSWAP(dst[15], dst[16]);
}

#define BITONIC_SORT_REVERSE_2          SORT_MAKE_STR(bitonic_sort_reverse_2)
static __inline void BITONIC_SORT_REVERSE_2(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
}


#define BITONIC_SORT_REVERSE_3          SORT_MAKE_STR(bitonic_sort_reverse_3)
static __inline void BITONIC_SORT_REVERSE_3(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[1], dst[0]);
}


#define BITONIC_SORT_REVERSE_4          SORT_MAKE_STR(bitonic_sort_reverse_4)
static __inline void BITONIC_SORT_REVERSE_4(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[2], dst[1]);
}


#define BITONIC_SORT_REVERSE_5          SORT_MAKE_STR(bitonic_sort_reverse_5)
static __inline void BITONIC_SORT_REVERSE_5(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[2], dst[1]);
}


#define BITONIC_SORT_REVERSE_6          SORT_MAKE_STR(bitonic_sort_reverse_6)
static __inline void BITONIC_SORT_REVERSE_6(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[3], dst[2]);
}


#define BITONIC_SORT_REVERSE_7          SORT_MAKE_STR(bitonic_sort_reverse_7)
static __inline void BITONIC_SORT_REVERSE_7(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[2]);
}


#define BITONIC_SORT_REVERSE_8          SORT_MAKE_STR(bitonic_sort_reverse_8)
static __inline void BITONIC_SORT_REVERSE_8(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[4], dst[3]);
}


#define BITONIC_SORT_REVERSE_9          SORT_MAKE_STR(bitonic_sort_reverse_9)
static __inline void BITONIC_SORT_REVERSE_9(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[3], dst[2]);
}


#define BITONIC_SORT_REVERSE_10          SORT_MAKE_STR(bitonic_sort_reverse_10)
static __inline void BITONIC_SORT_REVERSE_10(SORT_TYPE *dst) {
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[5], dst[4]);
}


#define BITONIC_SORT_REVERSE_11          SORT_MAKE_STR(bitonic_sort_reverse_11)
static __inline void BITONIC_SORT_REVERSE_11(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[8], dst[7]);
}


#define BITONIC_SORT_REVERSE_12          SORT_MAKE_STR(bitonic_sort_reverse_12)
static __inline void BITONIC_SORT_REVERSE_12(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[8], dst[7]);
}


#define BITONIC_SORT_REVERSE_13          SORT_MAKE_STR(bitonic_sort_reverse_13)
static __inline void BITONIC_SORT_REVERSE_13(SORT_TYPE *dst) {
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[12], dst[0]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
}


#define BITONIC_SORT_REVERSE_14          SORT_MAKE_STR(bitonic_sort_reverse_14)
static __inline void BITONIC_SORT_REVERSE_14(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
}


#define BITONIC_SORT_REVERSE_15          SORT_MAKE_STR(bitonic_sort_reverse_15)
static __inline void BITONIC_SORT_REVERSE_15(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
}


#define BITONIC_SORT_REVERSE_16          SORT_MAKE_STR(bitonic_sort_reverse_16)
static __inline void BITONIC_SORT_REVERSE_16(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
}


#define BITONIC_SORT_REVERSE_17          SORT_MAKE_STR(bitonic_sort_reverse_17)
static __inline void BITONIC_SORT_REVERSE_17(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[16], dst[7]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[9], dst[0]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[10], dst[1]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[11], dst[2]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[8], dst[1]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[8], dst[7]);
}


#define BITONIC_SORT_REVERSE_18          SORT_MAKE_STR(bitonic_sort_reverse_18)
static __inline void BITONIC_SORT_REVERSE_18(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[17], dst[8]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[16], dst[7]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[9], dst[0]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[10], dst[1]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[11], dst[2]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[9], dst[8]);
}


#define BITONIC_SORT_REVERSE_19          SORT_MAKE_STR(bitonic_sort_reverse_19)
static __inline void BITONIC_SORT_REVERSE_19(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[18], dst[8]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[17], dst[7]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[10], dst[0]);
  SORT_CSWAP(dst[17], dst[8]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[9], dst[0]);
  SORT_CSWAP(dst[11], dst[1]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[10], dst[1]);
  SORT_CSWAP(dst[12], dst[2]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[16], dst[7]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[9], dst[8]);
}


#define BITONIC_SORT_REVERSE_20          SORT_MAKE_STR(bitonic_sort_reverse_20)
static __inline void BITONIC_SORT_REVERSE_20(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[19], dst[9]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[10], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[18], dst[8]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[11], dst[1]);
  SORT_CSWAP(dst[18], dst[9]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[10], dst[1]);
  SORT_CSWAP(dst[12], dst[2]);
  SORT_CSWAP(dst[17], dst[7]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[17], dst[8]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[10], dst[9]);
}


#define BITONIC_SORT_REVERSE_21          SORT_MAKE_STR(bitonic_sort_reverse_21)
static __inline void BITONIC_SORT_REVERSE_21(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[20], dst[9]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[19], dst[8]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[19], dst[9]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[11], dst[0]);
  SORT_CSWAP(dst[18], dst[7]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[10], dst[0]);
  SORT_CSWAP(dst[12], dst[1]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[18], dst[8]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[11], dst[1]);
  SORT_CSWAP(dst[13], dst[2]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[18], dst[9]);
  SORT_CSWAP(dst[17], dst[8]);
  SORT_CSWAP(dst[10], dst[1]);
  SORT_CSWAP(dst[14], dst[3]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[16], dst[7]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[10], dst[9]);
}


#define BITONIC_SORT_REVERSE_22          SORT_MAKE_STR(bitonic_sort_reverse_22)
static __inline void BITONIC_SORT_REVERSE_22(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[21], dst[10]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[6], dst[0]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[20], dst[15]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[11], dst[0]);
  SORT_CSWAP(dst[20], dst[9]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[20], dst[10]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[12], dst[1]);
  SORT_CSWAP(dst[19], dst[8]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[11], dst[1]);
  SORT_CSWAP(dst[13], dst[2]);
  SORT_CSWAP(dst[18], dst[7]);
  SORT_CSWAP(dst[19], dst[9]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[14], dst[3]);
  SORT_CSWAP(dst[11], dst[2]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[19], dst[10]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[17], dst[7]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[16], dst[7]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[11], dst[10]);
}


#define BITONIC_SORT_REVERSE_23          SORT_MAKE_STR(bitonic_sort_reverse_23)
static __inline void BITONIC_SORT_REVERSE_23(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[22], dst[19]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[22], dst[16]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[22], dst[10]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[6], dst[0]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[5], dst[0]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[21], dst[16]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[20], dst[15]);
  SORT_CSWAP(dst[12], dst[0]);
  SORT_CSWAP(dst[21], dst[9]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[11], dst[0]);
  SORT_CSWAP(dst[21], dst[10]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[13], dst[1]);
  SORT_CSWAP(dst[20], dst[8]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[12], dst[1]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[19], dst[7]);
  SORT_CSWAP(dst[20], dst[9]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[11], dst[1]);
  SORT_CSWAP(dst[15], dst[3]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[20], dst[10]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[14], dst[3]);
  SORT_CSWAP(dst[11], dst[2]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[18], dst[7]);
  SORT_CSWAP(dst[19], dst[10]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[18], dst[9]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[17], dst[7]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[17], dst[8]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[11], dst[10]);
}


#define BITONIC_SORT_REVERSE_24          SORT_MAKE_STR(bitonic_sort_reverse_24)
static __inline void BITONIC_SORT_REVERSE_24(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[23], dst[20]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[22], dst[19]);
  SORT_CSWAP(dst[23], dst[17]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[6], dst[0]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[23], dst[11]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[22], dst[16]);
  SORT_CSWAP(dst[12], dst[0]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[22], dst[17]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[21], dst[16]);
  SORT_CSWAP(dst[13], dst[1]);
  SORT_CSWAP(dst[22], dst[10]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[12], dst[1]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[21], dst[9]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[13], dst[2]);
  SORT_CSWAP(dst[15], dst[3]);
  SORT_CSWAP(dst[20], dst[8]);
  SORT_CSWAP(dst[21], dst[10]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[12], dst[2]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[19], dst[7]);
  SORT_CSWAP(dst[21], dst[11]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[19], dst[8]);
  SORT_CSWAP(dst[20], dst[11]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[18], dst[7]);
  SORT_CSWAP(dst[19], dst[10]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[18], dst[8]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[18], dst[9]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[12], dst[11]);
}


#define BITONIC_SORT_REVERSE_25          SORT_MAKE_STR(bitonic_sort_reverse_25)
static __inline void BITONIC_SORT_REVERSE_25(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[24], dst[17]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[6], dst[0]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[23], dst[20]);
  SORT_CSWAP(dst[24], dst[11]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[23], dst[16]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[19], dst[12]);
  SORT_CSWAP(dst[22], dst[15]);
  SORT_CSWAP(dst[23], dst[17]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[9], dst[4]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[20], dst[13]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[22], dst[16]);
  SORT_CSWAP(dst[23], dst[10]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[22], dst[17]);
  SORT_CSWAP(dst[23], dst[11]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[13], dst[0]);
  SORT_CSWAP(dst[22], dst[9]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[12], dst[0]);
  SORT_CSWAP(dst[21], dst[8]);
  SORT_CSWAP(dst[22], dst[10]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[14], dst[1]);
  SORT_CSWAP(dst[20], dst[7]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[12], dst[1]);
  SORT_CSWAP(dst[19], dst[6]);
  SORT_CSWAP(dst[20], dst[8]);
  SORT_CSWAP(dst[21], dst[11]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[16], dst[3]);
  SORT_CSWAP(dst[19], dst[7]);
  SORT_CSWAP(dst[20], dst[10]);
  SORT_CSWAP(dst[13], dst[2]);
  SORT_CSWAP(dst[17], dst[4]);
  SORT_CSWAP(dst[18], dst[5]);
  SORT_CSWAP(dst[19], dst[8]);
  SORT_CSWAP(dst[20], dst[11]);
  SORT_CSWAP(dst[12], dst[2]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[19], dst[9]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[12], dst[3]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[19], dst[10]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[12], dst[11]);
}


#define BITONIC_SORT_REVERSE_26          SORT_MAKE_STR(bitonic_sort_reverse_26)
static __inline void BITONIC_SORT_REVERSE_26(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[25], dst[18]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[22], dst[19]);
  SORT_CSWAP(dst[24], dst[21]);
  SORT_CSWAP(dst[25], dst[12]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[24], dst[17]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[7], dst[0]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[20], dst[13]);
  SORT_CSWAP(dst[23], dst[16]);
  SORT_CSWAP(dst[24], dst[18]);
  SORT_CSWAP(dst[6], dst[0]);
  SORT_CSWAP(dst[8], dst[1]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[22], dst[15]);
  SORT_CSWAP(dst[23], dst[17]);
  SORT_CSWAP(dst[24], dst[11]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[23], dst[18]);
  SORT_CSWAP(dst[13], dst[0]);
  SORT_CSWAP(dst[24], dst[12]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[20], dst[15]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[14], dst[1]);
  SORT_CSWAP(dst[23], dst[10]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[13], dst[1]);
  SORT_CSWAP(dst[22], dst[9]);
  SORT_CSWAP(dst[23], dst[12]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[21], dst[8]);
  SORT_CSWAP(dst[22], dst[10]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[16], dst[3]);
  SORT_CSWAP(dst[20], dst[7]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[13], dst[2]);
  SORT_CSWAP(dst[17], dst[4]);
  SORT_CSWAP(dst[20], dst[8]);
  SORT_CSWAP(dst[22], dst[12]);
  SORT_CSWAP(dst[21], dst[11]);
  SORT_CSWAP(dst[18], dst[5]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[19], dst[6]);
  SORT_CSWAP(dst[20], dst[10]);
  SORT_CSWAP(dst[21], dst[12]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[19], dst[7]);
  SORT_CSWAP(dst[20], dst[12]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[19], dst[8]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[19], dst[9]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[19], dst[10]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[19], dst[12]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[13], dst[12]);
}


#define BITONIC_SORT_REVERSE_27          SORT_MAKE_STR(bitonic_sort_reverse_27)
static __inline void BITONIC_SORT_REVERSE_27(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[26], dst[25]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[26], dst[24]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[26], dst[22]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[26], dst[19]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[23], dst[20]);
  SORT_CSWAP(dst[25], dst[22]);
  SORT_CSWAP(dst[26], dst[12]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[20], dst[13]);
  SORT_CSWAP(dst[25], dst[18]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[7], dst[0]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[24], dst[17]);
  SORT_CSWAP(dst[25], dst[19]);
  SORT_CSWAP(dst[6], dst[0]);
  SORT_CSWAP(dst[8], dst[1]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[22], dst[15]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[23], dst[16]);
  SORT_CSWAP(dst[24], dst[19]);
  SORT_CSWAP(dst[25], dst[11]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[6], dst[1]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[23], dst[17]);
  SORT_CSWAP(dst[14], dst[0]);
  SORT_CSWAP(dst[25], dst[12]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[20], dst[15]);
  SORT_CSWAP(dst[23], dst[18]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[13], dst[0]);
  SORT_CSWAP(dst[24], dst[10]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[15], dst[1]);
  SORT_CSWAP(dst[24], dst[12]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[22], dst[19]);
  SORT_CSWAP(dst[16], dst[2]);
  SORT_CSWAP(dst[13], dst[1]);
  SORT_CSWAP(dst[23], dst[9]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[17], dst[3]);
  SORT_CSWAP(dst[22], dst[8]);
  SORT_CSWAP(dst[23], dst[10]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[18], dst[4]);
  SORT_CSWAP(dst[21], dst[7]);
  SORT_CSWAP(dst[23], dst[11]);
  SORT_CSWAP(dst[13], dst[2]);
  SORT_CSWAP(dst[19], dst[5]);
  SORT_CSWAP(dst[17], dst[4]);
  SORT_CSWAP(dst[14], dst[3]);
  SORT_CSWAP(dst[20], dst[6]);
  SORT_CSWAP(dst[21], dst[8]);
  SORT_CSWAP(dst[23], dst[12]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[18], dst[5]);
  SORT_CSWAP(dst[13], dst[3]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[20], dst[7]);
  SORT_CSWAP(dst[21], dst[10]);
  SORT_CSWAP(dst[22], dst[12]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[13], dst[4]);
  SORT_CSWAP(dst[20], dst[8]);
  SORT_CSWAP(dst[21], dst[12]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[20], dst[9]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[20], dst[10]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[20], dst[11]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[20], dst[12]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[19], dst[12]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[13], dst[8]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[13], dst[12]);
}


#define BITONIC_SORT_REVERSE_28          SORT_MAKE_STR(bitonic_sort_reverse_28)
static __inline void BITONIC_SORT_REVERSE_28(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[27], dst[26]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[26], dst[24]);
  SORT_CSWAP(dst[27], dst[25]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[26], dst[25]);
  SORT_CSWAP(dst[27], dst[23]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[26], dst[22]);
  SORT_CSWAP(dst[27], dst[20]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[24], dst[21]);
  SORT_CSWAP(dst[26], dst[23]);
  SORT_CSWAP(dst[27], dst[13]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[7], dst[0]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[26], dst[19]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[8], dst[1]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[22], dst[15]);
  SORT_CSWAP(dst[25], dst[18]);
  SORT_CSWAP(dst[26], dst[20]);
  SORT_CSWAP(dst[14], dst[0]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[23], dst[16]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[24], dst[17]);
  SORT_CSWAP(dst[25], dst[20]);
  SORT_CSWAP(dst[26], dst[12]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[22], dst[16]);
  SORT_CSWAP(dst[24], dst[18]);
  SORT_CSWAP(dst[15], dst[1]);
  SORT_CSWAP(dst[25], dst[11]);
  SORT_CSWAP(dst[26], dst[13]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[21], dst[16]);
  SORT_CSWAP(dst[24], dst[19]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[14], dst[1]);
  SORT_CSWAP(dst[25], dst[13]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[16], dst[2]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[23], dst[20]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[17], dst[3]);
  SORT_CSWAP(dst[24], dst[10]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[18], dst[4]);
  SORT_CSWAP(dst[23], dst[9]);
  SORT_CSWAP(dst[24], dst[11]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[17], dst[4]);
  SORT_CSWAP(dst[19], dst[5]);
  SORT_CSWAP(dst[14], dst[3]);
  SORT_CSWAP(dst[22], dst[8]);
  SORT_CSWAP(dst[24], dst[12]);
  SORT_CSWAP(dst[20], dst[6]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[21], dst[7]);
  SORT_CSWAP(dst[22], dst[9]);
  SORT_CSWAP(dst[24], dst[13]);
  SORT_CSWAP(dst[23], dst[12]);
  SORT_CSWAP(dst[19], dst[6]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[21], dst[8]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[23], dst[13]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[21], dst[9]);
  SORT_CSWAP(dst[22], dst[13]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[21], dst[10]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[21], dst[11]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[21], dst[12]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[21], dst[13]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[19], dst[12]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[20], dst[13]);
  SORT_CSWAP(dst[17], dst[12]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[14], dst[13]);
}


#define BITONIC_SORT_REVERSE_29          SORT_MAKE_STR(bitonic_sort_reverse_29)
static __inline void BITONIC_SORT_REVERSE_29(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[26], dst[25]);
  SORT_CSWAP(dst[28], dst[27]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[27], dst[25]);
  SORT_CSWAP(dst[28], dst[26]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[27], dst[26]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[28], dst[24]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[26], dst[22]);
  SORT_CSWAP(dst[27], dst[23]);
  SORT_CSWAP(dst[28], dst[20]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[25], dst[22]);
  SORT_CSWAP(dst[27], dst[24]);
  SORT_CSWAP(dst[28], dst[13]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[7], dst[0]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[26], dst[24]);
  SORT_CSWAP(dst[22], dst[14]);
  SORT_CSWAP(dst[27], dst[19]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[8], dst[1]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[23], dst[15]);
  SORT_CSWAP(dst[26], dst[18]);
  SORT_CSWAP(dst[27], dst[20]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[24], dst[16]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[25], dst[17]);
  SORT_CSWAP(dst[26], dst[20]);
  SORT_CSWAP(dst[27], dst[12]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[10], dst[4]);
  SORT_CSWAP(dst[23], dst[16]);
  SORT_CSWAP(dst[25], dst[18]);
  SORT_CSWAP(dst[15], dst[0]);
  SORT_CSWAP(dst[26], dst[11]);
  SORT_CSWAP(dst[27], dst[13]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[10], dst[5]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[22], dst[16]);
  SORT_CSWAP(dst[25], dst[19]);
  SORT_CSWAP(dst[14], dst[0]);
  SORT_CSWAP(dst[26], dst[13]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[21], dst[16]);
  SORT_CSWAP(dst[25], dst[20]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[16], dst[1]);
  SORT_CSWAP(dst[25], dst[10]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[23], dst[20]);
  SORT_CSWAP(dst[17], dst[2]);
  SORT_CSWAP(dst[14], dst[1]);
  SORT_CSWAP(dst[24], dst[9]);
  SORT_CSWAP(dst[25], dst[11]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[16], dst[2]);
  SORT_CSWAP(dst[18], dst[3]);
  SORT_CSWAP(dst[23], dst[8]);
  SORT_CSWAP(dst[25], dst[12]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[19], dst[4]);
  SORT_CSWAP(dst[22], dst[7]);
  SORT_CSWAP(dst[23], dst[9]);
  SORT_CSWAP(dst[25], dst[13]);
  SORT_CSWAP(dst[24], dst[12]);
  SORT_CSWAP(dst[14], dst[2]);
  SORT_CSWAP(dst[18], dst[4]);
  SORT_CSWAP(dst[20], dst[5]);
  SORT_CSWAP(dst[21], dst[6]);
  SORT_CSWAP(dst[22], dst[8]);
  SORT_CSWAP(dst[23], dst[11]);
  SORT_CSWAP(dst[24], dst[13]);
  SORT_CSWAP(dst[20], dst[6]);
  SORT_CSWAP(dst[18], dst[5]);
  SORT_CSWAP(dst[14], dst[3]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[22], dst[9]);
  SORT_CSWAP(dst[23], dst[13]);
  SORT_CSWAP(dst[19], dst[6]);
  SORT_CSWAP(dst[14], dst[4]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[22], dst[10]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[14], dst[5]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[22], dst[12]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[22], dst[13]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[20], dst[12]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[21], dst[13]);
  SORT_CSWAP(dst[18], dst[12]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[20], dst[13]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[14], dst[8]);
  SORT_CSWAP(dst[18], dst[13]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[14], dst[9]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[14], dst[13]);
}


#define BITONIC_SORT_REVERSE_30          SORT_MAKE_STR(bitonic_sort_reverse_30)
static __inline void BITONIC_SORT_REVERSE_30(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[27], dst[26]);
  SORT_CSWAP(dst[29], dst[28]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[28], dst[26]);
  SORT_CSWAP(dst[29], dst[27]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[28], dst[27]);
  SORT_CSWAP(dst[26], dst[22]);
  SORT_CSWAP(dst[29], dst[25]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[27], dst[23]);
  SORT_CSWAP(dst[28], dst[24]);
  SORT_CSWAP(dst[29], dst[21]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[26], dst[23]);
  SORT_CSWAP(dst[28], dst[25]);
  SORT_CSWAP(dst[29], dst[14]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[26], dst[24]);
  SORT_CSWAP(dst[27], dst[25]);
  SORT_CSWAP(dst[23], dst[15]);
  SORT_CSWAP(dst[28], dst[20]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[7], dst[0]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[26], dst[25]);
  SORT_CSWAP(dst[22], dst[15]);
  SORT_CSWAP(dst[24], dst[16]);
  SORT_CSWAP(dst[27], dst[19]);
  SORT_CSWAP(dst[28], dst[21]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[25], dst[17]);
  SORT_CSWAP(dst[22], dst[16]);
  SORT_CSWAP(dst[26], dst[18]);
  SORT_CSWAP(dst[27], dst[21]);
  SORT_CSWAP(dst[15], dst[0]);
  SORT_CSWAP(dst[28], dst[13]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[24], dst[17]);
  SORT_CSWAP(dst[26], dst[19]);
  SORT_CSWAP(dst[16], dst[1]);
  SORT_CSWAP(dst[27], dst[12]);
  SORT_CSWAP(dst[28], dst[14]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[23], dst[17]);
  SORT_CSWAP(dst[26], dst[20]);
  SORT_CSWAP(dst[15], dst[1]);
  SORT_CSWAP(dst[27], dst[14]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[22], dst[17]);
  SORT_CSWAP(dst[26], dst[21]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[17], dst[2]);
  SORT_CSWAP(dst[26], dst[11]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[22], dst[19]);
  SORT_CSWAP(dst[24], dst[21]);
  SORT_CSWAP(dst[16], dst[2]);
  SORT_CSWAP(dst[18], dst[3]);
  SORT_CSWAP(dst[25], dst[10]);
  SORT_CSWAP(dst[26], dst[12]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[19], dst[4]);
  SORT_CSWAP(dst[24], dst[9]);
  SORT_CSWAP(dst[26], dst[13]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[18], dst[4]);
  SORT_CSWAP(dst[20], dst[5]);
  SORT_CSWAP(dst[15], dst[3]);
  SORT_CSWAP(dst[23], dst[8]);
  SORT_CSWAP(dst[24], dst[10]);
  SORT_CSWAP(dst[26], dst[14]);
  SORT_CSWAP(dst[21], dst[6]);
  SORT_CSWAP(dst[18], dst[5]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[22], dst[7]);
  SORT_CSWAP(dst[23], dst[10]);
  SORT_CSWAP(dst[24], dst[13]);
  SORT_CSWAP(dst[25], dst[14]);
  SORT_CSWAP(dst[20], dst[6]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[22], dst[8]);
  SORT_CSWAP(dst[23], dst[12]);
  SORT_CSWAP(dst[24], dst[14]);
  SORT_CSWAP(dst[19], dst[6]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[22], dst[9]);
  SORT_CSWAP(dst[23], dst[14]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[22], dst[10]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[22], dst[11]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[22], dst[12]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[22], dst[13]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[20], dst[12]);
  SORT_CSWAP(dst[22], dst[14]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[19], dst[12]);
  SORT_CSWAP(dst[21], dst[13]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[15], dst[14]);
}


#define BITONIC_SORT_REVERSE_31          SORT_MAKE_STR(bitonic_sort_reverse_31)
static __inline void BITONIC_SORT_REVERSE_31(SORT_TYPE *dst) {
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[16], dst[15]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[26], dst[25]);
  SORT_CSWAP(dst[28], dst[27]);
  SORT_CSWAP(dst[30], dst[29]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[26], dst[24]);
  SORT_CSWAP(dst[29], dst[27]);
  SORT_CSWAP(dst[30], dst[28]);
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[29], dst[28]);
  SORT_CSWAP(dst[27], dst[23]);
  SORT_CSWAP(dst[30], dst[26]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[28], dst[24]);
  SORT_CSWAP(dst[29], dst[25]);
  SORT_CSWAP(dst[23], dst[15]);
  SORT_CSWAP(dst[30], dst[22]);
  SORT_CSWAP(dst[3], dst[0]);
  SORT_CSWAP(dst[5], dst[2]);
  SORT_CSWAP(dst[11], dst[8]);
  SORT_CSWAP(dst[13], dst[10]);
  SORT_CSWAP(dst[19], dst[16]);
  SORT_CSWAP(dst[21], dst[18]);
  SORT_CSWAP(dst[27], dst[24]);
  SORT_CSWAP(dst[29], dst[26]);
  SORT_CSWAP(dst[30], dst[14]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[27], dst[25]);
  SORT_CSWAP(dst[28], dst[26]);
  SORT_CSWAP(dst[24], dst[16]);
  SORT_CSWAP(dst[29], dst[21]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[7], dst[0]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[13], dst[6]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[27], dst[26]);
  SORT_CSWAP(dst[23], dst[16]);
  SORT_CSWAP(dst[25], dst[17]);
  SORT_CSWAP(dst[28], dst[20]);
  SORT_CSWAP(dst[29], dst[22]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[7], dst[1]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[26], dst[18]);
  SORT_CSWAP(dst[23], dst[17]);
  SORT_CSWAP(dst[27], dst[19]);
  SORT_CSWAP(dst[28], dst[22]);
  SORT_CSWAP(dst[16], dst[0]);
  SORT_CSWAP(dst[29], dst[13]);
  SORT_CSWAP(dst[9], dst[2]);
  SORT_CSWAP(dst[11], dst[4]);
  SORT_CSWAP(dst[25], dst[18]);
  SORT_CSWAP(dst[27], dst[20]);
  SORT_CSWAP(dst[15], dst[0]);
  SORT_CSWAP(dst[17], dst[1]);
  SORT_CSWAP(dst[28], dst[12]);
  SORT_CSWAP(dst[29], dst[14]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[11], dst[5]);
  SORT_CSWAP(dst[24], dst[18]);
  SORT_CSWAP(dst[27], dst[21]);
  SORT_CSWAP(dst[15], dst[1]);
  SORT_CSWAP(dst[28], dst[14]);
  SORT_CSWAP(dst[7], dst[2]);
  SORT_CSWAP(dst[11], dst[6]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[23], dst[18]);
  SORT_CSWAP(dst[27], dst[22]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[26], dst[22]);
  SORT_CSWAP(dst[18], dst[2]);
  SORT_CSWAP(dst[27], dst[11]);
  SORT_CSWAP(dst[7], dst[4]);
  SORT_CSWAP(dst[9], dst[6]);
  SORT_CSWAP(dst[23], dst[20]);
  SORT_CSWAP(dst[25], dst[22]);
  SORT_CSWAP(dst[17], dst[2]);
  SORT_CSWAP(dst[19], dst[3]);
  SORT_CSWAP(dst[26], dst[10]);
  SORT_CSWAP(dst[27], dst[12]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[16], dst[2]);
  SORT_CSWAP(dst[20], dst[4]);
  SORT_CSWAP(dst[25], dst[9]);
  SORT_CSWAP(dst[27], dst[13]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[15], dst[2]);
  SORT_CSWAP(dst[19], dst[4]);
  SORT_CSWAP(dst[21], dst[5]);
  SORT_CSWAP(dst[24], dst[8]);
  SORT_CSWAP(dst[25], dst[10]);
  SORT_CSWAP(dst[27], dst[14]);
  SORT_CSWAP(dst[22], dst[6]);
  SORT_CSWAP(dst[19], dst[5]);
  SORT_CSWAP(dst[15], dst[3]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[23], dst[7]);
  SORT_CSWAP(dst[24], dst[10]);
  SORT_CSWAP(dst[25], dst[13]);
  SORT_CSWAP(dst[26], dst[14]);
  SORT_CSWAP(dst[21], dst[6]);
  SORT_CSWAP(dst[15], dst[4]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[23], dst[8]);
  SORT_CSWAP(dst[24], dst[12]);
  SORT_CSWAP(dst[25], dst[14]);
  SORT_CSWAP(dst[20], dst[6]);
  SORT_CSWAP(dst[15], dst[5]);
  SORT_CSWAP(dst[23], dst[9]);
  SORT_CSWAP(dst[24], dst[14]);
  SORT_CSWAP(dst[19], dst[6]);
  SORT_CSWAP(dst[23], dst[10]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[23], dst[11]);
  SORT_CSWAP(dst[17], dst[6]);
  SORT_CSWAP(dst[23], dst[12]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[23], dst[13]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[20], dst[12]);
  SORT_CSWAP(dst[15], dst[6]);
  SORT_CSWAP(dst[23], dst[14]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[17], dst[10]);
  SORT_CSWAP(dst[19], dst[12]);
  SORT_CSWAP(dst[21], dst[13]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[22], dst[14]);
  SORT_CSWAP(dst[19], dst[13]);
  SORT_CSWAP(dst[15], dst[8]);
  SORT_CSWAP(dst[21], dst[14]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[15], dst[9]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[15], dst[10]);
  SORT_CSWAP(dst[19], dst[14]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[15], dst[12]);
  SORT_CSWAP(dst[17], dst[14]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[15], dst[14]);
}


#define BITONIC_SORT_REVERSE_32          SORT_MAKE_STR(bitonic_sort_reverse_32)
static __inline void BITONIC_SORT_REVERSE_32(SORT_TYPE *dst) {
  SORT_CSWAP(dst[1], dst[0]);
  SORT_CSWAP(dst[3], dst[2]);
  SORT_CSWAP(dst[5], dst[4]);
  SORT_CSWAP(dst[7], dst[6]);
  SORT_CSWAP(dst[9], dst[8]);
  SORT_CSWAP(dst[11], dst[10]);
  SORT_CSWAP(dst[13], dst[12]);
  SORT_CSWAP(dst[15], dst[14]);
  SORT_CSWAP(dst[17], dst[16]);
  SORT_CSWAP(dst[19], dst[18]);
  SORT_CSWAP(dst[21], dst[20]);
  SORT_CSWAP(dst[23], dst[22]);
  SORT_CSWAP(dst[25], dst[24]);
  SORT_CSWAP(dst[27], dst[26]);
  SORT_CSWAP(dst[29], dst[28]);
  SORT_CSWAP(dst[31], dst[30]);
  SORT_CSWAP(dst[2], dst[0]);
  SORT_CSWAP(dst[3], dst[1]);
  SORT_CSWAP(dst[6], dst[4]);
  SORT_CSWAP(dst[7], dst[5]);
  SORT_CSWAP(dst[10], dst[8]);
  SORT_CSWAP(dst[11], dst[9]);
  SORT_CSWAP(dst[14], dst[12]);
  SORT_CSWAP(dst[15], dst[13]);
  SORT_CSWAP(dst[18], dst[16]);
  SORT_CSWAP(dst[19], dst[17]);
  SORT_CSWAP(dst[22], dst[20]);
  SORT_CSWAP(dst[23], dst[21]);
  SORT_CSWAP(dst[26], dst[24]);
  SORT_CSWAP(dst[27], dst[25]);
  SORT_CSWAP(dst[30], dst[28]);
  SORT_CSWAP(dst[31], dst[29]);
  SORT_CSWAP(dst[2], dst[1]);
  SORT_CSWAP(dst[6], dst[5]);
  SORT_CSWAP(dst[4], dst[0]);
  SORT_CSWAP(dst[7], dst[3]);
  SORT_CSWAP(dst[10], dst[9]);
  SORT_CSWAP(dst[14], dst[13]);
  SORT_CSWAP(dst[12], dst[8]);
  SORT_CSWAP(dst[15], dst[11]);
  SORT_CSWAP(dst[18], dst[17]);
  SORT_CSWAP(dst[22], dst[21]);
  SORT_CSWAP(dst[20], dst[16]);
  SORT_CSWAP(dst[23], dst[19]);
  SORT_CSWAP(dst[26], dst[25]);
  SORT_CSWAP(dst[30], dst[29]);
  SORT_CSWAP(dst[28], dst[24]);
  SORT_CSWAP(dst[31], dst[27]);
  SORT_CSWAP(dst[5], dst[1]);
  SORT_CSWAP(dst[6], dst[2]);
  SORT_CSWAP(dst[13], dst[9]);
  SORT_CSWAP(dst[14], dst[10]);
  SORT_CSWAP(dst[8], dst[0]);
  SORT_CSWAP(dst[15], dst[7]);
  SORT_CSWAP(dst[21], dst[17]);
  SORT_CSWAP(dst[22], dst[18]);
  SORT_CSWAP(dst[29], dst[25]);
  SORT_CSWAP(dst[30], dst[26]);
  SORT_CSWAP(dst[24], dst[16]);
  SORT_CSWAP(dst[31], dst[23]);
  SORT_CSWAP(dst[4], dst[1]);
  SORT_CSWAP(dst[6], dst[3]);
  SORT_CSWAP(dst[12], dst[9]);
  SORT_CSWAP(dst[14], dst[11]);
  SORT_CSWAP(dst[20], dst[17]);
  SORT_CSWAP(dst[22], dst[19]);
  SORT_CSWAP(dst[28], dst[25]);
  SORT_CSWAP(dst[30], dst[27]);
  SORT_CSWAP(dst[16], dst[0]);
  SORT_CSWAP(dst[31], dst[15]);
  SORT_CSWAP(dst[4], dst[2]);
  SORT_CSWAP(dst[5], dst[3]);
  SORT_CSWAP(dst[12], dst[10]);
  SORT_CSWAP(dst[13], dst[11]);
  SORT_CSWAP(dst[9], dst[1]);
  SORT_CSWAP(dst[14], dst[6]);
  SORT_CSWAP(dst[20], dst[18]);
  SORT_CSWAP(dst[21], dst[19]);
  SORT_CSWAP(dst[28], dst[26]);
  SORT_CSWAP(dst[29], dst[27]);
  SORT_CSWAP(dst[25], dst[17]);
  SORT_CSWAP(dst[30], dst[22]);
  SORT_CSWAP(dst[4], dst[3]);
  SORT_CSWAP(dst[12], dst[11]);
  SORT_CSWAP(dst[8], dst[1]);
  SORT_CSWAP(dst[10], dst[2]);
  SORT_CSWAP(dst[13], dst[5]);
  SORT_CSWAP(dst[14], dst[7]);
  SORT_CSWAP(dst[20], dst[19]);
  SORT_CSWAP(dst[28], dst[27]);
  SORT_CSWAP(dst[24], dst[17]);
  SORT_CSWAP(dst[26], dst[18]);
  SORT_CSWAP(dst[29], dst[21]);
  SORT_CSWAP(dst[30], dst[23]);
  SORT_CSWAP(dst[11], dst[3]);
  SORT_CSWAP(dst[8], dst[2]);
  SORT_CSWAP(dst[12], dst[4]);
  SORT_CSWAP(dst[13], dst[7]);
  SORT_CSWAP(dst[27], dst[19]);
  SORT_CSWAP(dst[24], dst[18]);
  SORT_CSWAP(dst[28], dst[20]);
  SORT_CSWAP(dst[29], dst[23]);
  SORT_CSWAP(dst[17], dst[1]);
  SORT_CSWAP(dst[30], dst[14]);
  SORT_CSWAP(dst[10], dst[3]);
  SORT_CSWAP(dst[12], dst[5]);
  SORT_CSWAP(dst[26], dst[19]);
  SORT_CSWAP(dst[28], dst[21]);
  SORT_CSWAP(dst[16], dst[1]);
  SORT_CSWAP(dst[18], dst[2]);
  SORT_CSWAP(dst[29], dst[13]);
  SORT_CSWAP(dst[30], dst[15]);
  SORT_CSWAP(dst[9], dst[3]);
  SORT_CSWAP(dst[12], dst[6]);
  SORT_CSWAP(dst[25], dst[19]);
  SORT_CSWAP(dst[28], dst[22]);
  SORT_CSWAP(dst[16], dst[2]);
  SORT_CSWAP(dst[29], dst[15]);
  SORT_CSWAP(dst[8], dst[3]);
  SORT_CSWAP(dst[12], dst[7]);
  SORT_CSWAP(dst[9], dst[5]);
  SORT_CSWAP(dst[10], dst[6]);
  SORT_CSWAP(dst[24], dst[19]);
  SORT_CSWAP(dst[28], dst[23]);
  SORT_CSWAP(dst[25], dst[21]);
  SORT_CSWAP(dst[26], dst[22]);
  SORT_CSWAP(dst[8], dst[4]);
  SORT_CSWAP(dst[11], dst[7]);
  SORT_CSWAP(dst[24], dst[20]);
  SORT_CSWAP(dst[27], dst[23]);
  SORT_CSWAP(dst[19], dst[3]);
  SORT_CSWAP(dst[28], dst[12]);
  SORT_CSWAP(dst[8], dst[5]);
  SORT_CSWAP(dst[10], dst[7]);
  SORT_CSWAP(dst[24], dst[21]);
  SORT_CSWAP(dst[26], dst[23]);
  SORT_CSWAP(dst[18], dst[3]);
  SORT_CSWAP(dst[20], dst[4]);
  SORT_CSWAP(dst[27], dst[11]);
  SORT_CSWAP(dst[28], dst[13]);
  SORT_CSWAP(dst[8], dst[6]);
  SORT_CSWAP(dst[9], dst[7]);
  SORT_CSWAP(dst[24], dst[22]);
  SORT_CSWAP(dst[25], dst[23]);
  SORT_CSWAP(dst[17], dst[3]);
  SORT_CSWAP(dst[21], dst[5]);
  SORT_CSWAP(dst[26], dst[10]);
  SORT_CSWAP(dst[28], dst[14]);
  SORT_CSWAP(dst[8], dst[7]);
  SORT_CSWAP(dst[24], dst[23]);
  SORT_CSWAP(dst[16], dst[3]);
  SORT_CSWAP(dst[20], dst[5]);
  SORT_CSWAP(dst[22], dst[6]);
  SORT_CSWAP(dst[25], dst[9]);
  SORT_CSWAP(dst[26], dst[11]);
  SORT_CSWAP(dst[28], dst[15]);
  SORT_CSWAP(dst[23], dst[7]);
  SORT_CSWAP(dst[20], dst[6]);
  SORT_CSWAP(dst[16], dst[4]);
  SORT_CSWAP(dst[17], dst[5]);
  SORT_CSWAP(dst[24], dst[8]);
  SORT_CSWAP(dst[25], dst[11]);
  SORT_CSWAP(dst[26], dst[14]);
  SORT_CSWAP(dst[27], dst[15]);
  SORT_CSWAP(dst[22], dst[7]);
  SORT_CSWAP(dst[16], dst[5]);
  SORT_CSWAP(dst[18], dst[6]);
  SORT_CSWAP(dst[24], dst[9]);
  SORT_CSWAP(dst[25], dst[13]);
  SORT_CSWAP(dst[26], dst[15]);
  SORT_CSWAP(dst[21], dst[7]);
  SORT_CSWAP(dst[16], dst[6]);
  SORT_CSWAP(dst[24], dst[10]);
  SORT_CSWAP(dst[25], dst[15]);
  SORT_CSWAP(dst[20], dst[7]);
  SORT_CSWAP(dst[24], dst[11]);
  SORT_CSWAP(dst[19], dst[7]);
  SORT_CSWAP(dst[24], dst[12]);
  SORT_CSWAP(dst[18], dst[7]);
  SORT_CSWAP(dst[24], dst[13]);
  SORT_CSWAP(dst[19], dst[11]);
  SORT_CSWAP(dst[20], dst[12]);
  SORT_CSWAP(dst[17], dst[7]);
  SORT_CSWAP(dst[24], dst[14]);
  SORT_CSWAP(dst[18], dst[10]);
  SORT_CSWAP(dst[21], dst[13]);
  SORT_CSWAP(dst[16], dst[7]);
  SORT_CSWAP(dst[24], dst[15]);
  SORT_CSWAP(dst[17], dst[9]);
  SORT_CSWAP(dst[18], dst[11]);
  SORT_CSWAP(dst[20], dst[13]);
  SORT_CSWAP(dst[22], dst[14]);
  SORT_CSWAP(dst[16], dst[8]);
  SORT_CSWAP(dst[17], dst[11]);
  SORT_CSWAP(dst[23], dst[15]);
  SORT_CSWAP(dst[20], dst[14]);
  SORT_CSWAP(dst[16], dst[9]);
  SORT_CSWAP(dst[22], dst[15]);
  SORT_CSWAP(dst[17], dst[13]);
  SORT_CSWAP(dst[18], dst[14]);
  SORT_CSWAP(dst[16], dst[10]);
  SORT_CSWAP(dst[21], dst[15]);
  SORT_CSWAP(dst[16], dst[11]);
  SORT_CSWAP(dst[20], dst[15]);
  SORT_CSWAP(dst[16], dst[12]);
  SORT_CSWAP(dst[19], dst[15]);
  SORT_CSWAP(dst[16], dst[13]);
  SORT_CSWAP(dst[18], dst[15]);
  SORT_CSWAP(dst[16], dst[14]);
  SORT_CSWAP(dst[17], dst[15]);
  SORT_CSWAP(dst[16], dst[15]);
}

#define BITONIC_SORT          SORT_MAKE_STR(bitonic_sort)
void BITONIC_SORT(SORT_TYPE *dst, const size_t size);
#define BITONIC_SORT_REVERSE          SORT_MAKE_STR(bitonic_sort_reverse)
void BITONIC_SORT_REVERSE(SORT_TYPE *dst, const size_t size);

#define BITONIC_MERGE          SORT_MAKE_STR(bitonic_merge)
void BITONIC_MERGE(SORT_TYPE *dst, const size_t size) {
  size_t m, i, j;

  if (size <= 1) {
    return;
  }

  m = 1 << (63 - CLZ(size - 1));
  j = m;

  for (i = 0; i < size - m; ++i, ++j) {
    SORT_CSWAP(dst[i], dst[j]);
  }

  BITONIC_MERGE(dst, m);
  BITONIC_MERGE(dst + m, size - m);
}

#define BITONIC_MERGE_REVERSE          SORT_MAKE_STR(bitonic_merge_reverse)
void BITONIC_MERGE_REVERSE(SORT_TYPE *dst, const size_t size) {
  size_t m, i, j;

  if (size <= 1) {
    return;
  }

  m = 1 << (63 - CLZ(size - 1));
  j = m;

  for (i = 0; i < size - m; ++i, ++j) {
    SORT_CSWAP(dst[j], dst[i]);
  }

  BITONIC_MERGE_REVERSE(dst, m);
  BITONIC_MERGE_REVERSE(dst + m, size - m);
}


void BITONIC_SORT(SORT_TYPE *dst, const size_t size) {
  switch (size) {
  case 0:
  case 1:
    break;

  case 2:
    BITONIC_SORT_2(dst);
    break;

  case 3:
    BITONIC_SORT_3(dst);
    break;

  case 4:
    BITONIC_SORT_4(dst);
    break;

  case 5:
    BITONIC_SORT_5(dst);
    break;

  case 6:
    BITONIC_SORT_6(dst);
    break;

  case 7:
    BITONIC_SORT_7(dst);
    break;

  case 8:
    BITONIC_SORT_8(dst);
    break;

  case 9:
    BITONIC_SORT_9(dst);
    break;

  case 10:
    BITONIC_SORT_10(dst);
    break;

  case 11:
    BITONIC_SORT_11(dst);
    break;

  case 12:
    BITONIC_SORT_12(dst);
    break;

  case 13:
    BITONIC_SORT_13(dst);
    break;

  case 14:
    BITONIC_SORT_14(dst);
    break;

  case 15:
    BITONIC_SORT_15(dst);
    break;

  case 16:
    BITONIC_SORT_16(dst);
    break;

  case 17:
    BITONIC_SORT_17(dst);
    break;

  case 18:
    BITONIC_SORT_18(dst);
    break;

  case 19:
    BITONIC_SORT_19(dst);
    break;

  case 20:
    BITONIC_SORT_20(dst);
    break;

  case 21:
    BITONIC_SORT_21(dst);
    break;

  case 22:
    BITONIC_SORT_22(dst);
    break;

  case 23:
    BITONIC_SORT_23(dst);
    break;

  case 24:
    BITONIC_SORT_24(dst);
    break;

  case 25:
    BITONIC_SORT_25(dst);
    break;

  case 26:
    BITONIC_SORT_26(dst);
    break;

  case 27:
    BITONIC_SORT_27(dst);
    break;

  case 28:
    BITONIC_SORT_28(dst);
    break;

  case 29:
    BITONIC_SORT_29(dst);
    break;

  case 30:
    BITONIC_SORT_30(dst);
    break;

  case 31:
    BITONIC_SORT_31(dst);
    break;

  case 32:
    BITONIC_SORT_32(dst);
    break;

  default:
    /*printf("Bitonic sort size = %ld", size);*/
    BITONIC_SORT_REVERSE(dst, (size >> 1));
    BITONIC_SORT(dst + (size >> 1), size - (size >> 1));
    BITONIC_MERGE(dst, size);
  }
}

void BITONIC_SORT_REVERSE(SORT_TYPE *dst, const size_t size) {
  switch (size) {
  case 0:
  case 1:
    break;

  case 2:
    BITONIC_SORT_REVERSE_2(dst);
    break;

  case 3:
    BITONIC_SORT_REVERSE_3(dst);
    break;

  case 4:
    BITONIC_SORT_REVERSE_4(dst);
    break;

  case 5:
    BITONIC_SORT_REVERSE_5(dst);
    break;

  case 6:
    BITONIC_SORT_REVERSE_6(dst);
    break;

  case 7:
    BITONIC_SORT_REVERSE_7(dst);
    break;

  case 8:
    BITONIC_SORT_REVERSE_8(dst);
    break;

  case 9:
    BITONIC_SORT_REVERSE_9(dst);
    break;

  case 10:
    BITONIC_SORT_REVERSE_10(dst);
    break;

  case 11:
    BITONIC_SORT_REVERSE_11(dst);
    break;

  case 12:
    BITONIC_SORT_REVERSE_12(dst);
    break;

  case 13:
    BITONIC_SORT_REVERSE_13(dst);
    break;

  case 14:
    BITONIC_SORT_REVERSE_14(dst);
    break;

  case 15:
    BITONIC_SORT_REVERSE_15(dst);
    break;

  case 16:
    BITONIC_SORT_REVERSE_16(dst);
    break;

  case 17:
    BITONIC_SORT_REVERSE_17(dst);
    break;

  case 18:
    BITONIC_SORT_REVERSE_18(dst);
    break;

  case 19:
    BITONIC_SORT_REVERSE_19(dst);
    break;

  case 20:
    BITONIC_SORT_REVERSE_20(dst);
    break;

  case 21:
    BITONIC_SORT_REVERSE_21(dst);
    break;

  case 22:
    BITONIC_SORT_REVERSE_22(dst);
    break;

  case 23:
    BITONIC_SORT_REVERSE_23(dst);
    break;

  case 24:
    BITONIC_SORT_REVERSE_24(dst);
    break;

  case 25:
    BITONIC_SORT_REVERSE_25(dst);
    break;

  case 26:
    BITONIC_SORT_REVERSE_26(dst);
    break;

  case 27:
    BITONIC_SORT_REVERSE_27(dst);
    break;

  case 28:
    BITONIC_SORT_REVERSE_28(dst);
    break;

  case 29:
    BITONIC_SORT_REVERSE_29(dst);
    break;

  case 30:
    BITONIC_SORT_REVERSE_30(dst);
    break;

  case 31:
    BITONIC_SORT_REVERSE_31(dst);
    break;

  case 32:
    BITONIC_SORT_REVERSE_32(dst);
    break;

  default:
    /*printf("Bitonic sort reverse size = %ld", size);*/
    BITONIC_SORT(dst, (size >> 1));
    BITONIC_SORT_REVERSE(dst + (size >> 1), size - (size >> 1));
    BITONIC_MERGE_REVERSE(dst, size);
  }
}
